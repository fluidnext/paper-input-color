{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "paper-input-color.js",
      "properties": [
        {
          "name": "colorType",
          "type": "String",
          "description": "`colorType` Set what you see on the input value, default value is HEX for hexadecimal, so you see '#ffffff'.\nthere are two possibility, hex, rgb or hsl",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 12
            },
            "end": {
              "line": 134,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onChangeColorType\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "value",
          "type": "String",
          "description": "`value` Value of the element, could be '#ffffff'(hex) or 'rgb(100,100,100)'(rgb)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 12
            },
            "end": {
              "line": 144,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onChangeValue\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 175,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clear",
          "description": "Used for set string color at `null` to show transparent color",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 186,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "MouseEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onClick",
          "description": "Used to bind click from paper-input to hidden input",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 4
            },
            "end": {
              "line": 194,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onChangeValue",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 4
            },
            "end": {
              "line": 216,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "String"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onChangeColorType",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 244,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "String"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "convertHex",
          "description": "Convert the hex value in the type given",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 263,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "string"
            },
            {
              "name": "value",
              "type": "string"
            }
          ]
        },
        {
          "name": "convertRgb",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 270,
              "column": 4
            },
            "end": {
              "line": 281,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "string"
            },
            {
              "name": "value",
              "type": "string"
            }
          ]
        },
        {
          "name": "convertHsl",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 4
            },
            "end": {
              "line": 299,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "string"
            },
            {
              "name": "value",
              "type": "string"
            }
          ]
        },
        {
          "name": "_hslTemplateString",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 307,
              "column": 4
            },
            "end": {
              "line": 309,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "objectColor",
              "type": "object"
            }
          ],
          "return": {
            "type": "string"
          }
        },
        {
          "name": "_hexTemplateString",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 4
            },
            "end": {
              "line": 319,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "objectColor",
              "type": "object"
            }
          ],
          "return": {
            "type": "string"
          }
        },
        {
          "name": "_rgbTemplateString",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 4
            },
            "end": {
              "line": 329,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "objectColor",
              "type": "object"
            }
          ],
          "return": {
            "type": "string"
          }
        },
        {
          "name": "_hexToRgb",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 337,
              "column": 4
            },
            "end": {
              "line": 349,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "string"
            }
          ],
          "return": {
            "type": "object"
          }
        },
        {
          "name": "_hexToHls",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 4
            },
            "end": {
              "line": 389,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "string"
            }
          ],
          "return": {
            "type": "object"
          }
        },
        {
          "name": "_rgbToHex",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 408,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String"
            }
          ]
        },
        {
          "name": "_rgbToHsl",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 415,
              "column": 4
            },
            "end": {
              "line": 423,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "string"
            }
          ],
          "return": {
            "type": "object"
          }
        },
        {
          "name": "_hslToRgb",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 430,
              "column": 4
            },
            "end": {
              "line": 469,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String"
            }
          ],
          "return": {
            "type": "object"
          }
        },
        {
          "name": "_hslToHex",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 475,
              "column": 4
            },
            "end": {
              "line": 483,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String"
            }
          ]
        },
        {
          "name": "isColor",
          "description": "Check if the value is a valid formatted string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 491,
              "column": 4
            },
            "end": {
              "line": 493,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "isRgbColor",
          "description": "Check if the value is a valid rgb formatted string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 501,
              "column": 4
            },
            "end": {
              "line": 504,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "isHslColor",
          "description": "Check if the value is a valid hsl formatted string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 512,
              "column": 4
            },
            "end": {
              "line": 515,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "isHexColor",
          "description": "Check if the value is a valid hexadecimal formatted string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 523,
              "column": 4
            },
            "end": {
              "line": 526,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_onChangeInputColorValue",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 532,
              "column": 4
            },
            "end": {
              "line": 535,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt",
              "type": "Event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showElement",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 540,
              "column": 4
            },
            "end": {
              "line": 543,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_hideElement",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 548,
              "column": 4
            },
            "end": {
              "line": 551,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": "Paper-Input-Color"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 552,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "PaperInputColor",
      "attributes": [
        {
          "name": "color-type",
          "description": "`colorType` Set what you see on the input value, default value is HEX for hexadecimal, so you see '#ffffff'.\nthere are two possibility, hex, rgb or hsl",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 12
            },
            "end": {
              "line": 134,
              "column": 13
            }
          },
          "metadata": {},
          "type": "String"
        },
        {
          "name": "value",
          "description": "`value` Value of the element, could be '#ffffff'(hex) or 'rgb(100,100,100)'(rgb)",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 12
            },
            "end": {
              "line": 144,
              "column": 13
            }
          },
          "metadata": {},
          "type": "String"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "paper-input-color"
    }
  ]
}
